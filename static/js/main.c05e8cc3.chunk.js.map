{"version":3,"sources":["pages/Index.js","routes.js","index.js","App.js"],"names":["Index","useState","lorem","setLorem","qtd","setQtd","type","setType","Container","Typography","variant","style","marginBottom","span","Group","onChange","e","target","value","display","height","lineHeight","maxLength","onClick","qtdParagraphs","loremArray","i","loremP","qtdPhrases","Math","floor","random","j","data","length","joined","join","handleGenerate","map","paragraph","index","key","toString","marginTop","color","fontSize","textAlign","routes","basename","process","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"iWAKe,SAASA,IAAS,IAAD,EACFC,mBAAS,IADP,mBACrBC,EADqB,KACdC,EADc,OAENF,mBAAS,IAFH,mBAErBG,EAFqB,KAEhBC,EAFgB,OAGJJ,mBAAS,IAHL,mBAGrBK,EAHqB,KAGfC,EAHe,KAiC5B,OACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,MAAO,CAAEC,aAAc,KAAhD,YACA,kBAACH,EAAA,EAAD,CAAYC,QAAQ,KAAKC,MAAO,CAAEC,aAAc,KAAhD,eACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKC,KAAM,GACP,kBAAC,IAAMC,MAAP,CAAaC,SAAU,SAAAC,GAAC,OAAIT,EAAQS,EAAEC,OAAOC,QAAQA,MAAOZ,GACxD,kBAAC,IAAD,CACIK,MAAO,CACHQ,QAAS,QACTC,OAAQ,OACRC,WAAY,QAEhBH,MAAO,WACP,yCAEJ,kBAAC,IAAD,CACIP,MAAO,CACHQ,QAAS,QACTC,OAAQ,OACRC,WAAY,QAEhBH,MAAO,cACP,kDAKZ,kBAAC,IAAD,CAAKL,KAAM,GAEP,kBAAC,IAAD,CAAOS,UAAU,IAAIP,SAAU,SAAAC,GAAC,OAAIX,EAAOW,EAAEC,OAAOC,WAExD,kBAAC,IAAD,CAAKL,KAAM,GACP,kBAAC,IAAD,CAAQU,QAAS,kBA7DjC,WACI,IACIC,EADAC,EAAa,GAIbD,EADS,YAATlB,EACgB,EAGAF,EAGpB,IAAK,IAAIsB,EAAI,EAAGA,EAAIF,EAAeE,IAAK,CAIpC,IAHA,IAAIC,EAAS,GACTC,EAAsB,YAATtB,EAAqBF,EAAMyB,KAAKC,MAAM,GAAAD,KAAKE,UAAuB,EAE1EC,EAAI,EAAGA,EAAIJ,EAAYI,IAAK,CACjC,IAAID,EAASE,EAAKJ,KAAKC,MAAMD,KAAKE,SAAWE,EAAKC,SAClDP,EAAM,sBAAOA,GAAP,CAAeI,IAGzB,IAAMI,EAASR,EAAOS,KAAK,KAE3BX,EAAU,sBAAOA,GAAP,CAAmBU,IAGjChC,EAASsB,GAoC0BY,KAAvB,WAGPnC,EAAMoC,KAAI,SAACC,EAAWC,GAAZ,OACP,kBAAC/B,EAAA,EAAD,CACIgC,IAAKD,EAAME,WACXhC,QAAQ,QACRC,MAAO,CAAEgC,UAAW,GAAIC,MAAO,OAAQC,SAAU,GAAIC,UAAW,YAC/DP,OC3EN,SAASQ,IACpB,OACI,kBAAC,IAAD,CAAeC,SAAUC,aACrB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWpD,MCHjDqD,IAASC,OAAO,mBCDD,WACb,OACE,kBAAC,EAAD,QDDY,MAASC,SAASC,eAAe,U","file":"static/js/main.c05e8cc3.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Input, Button, Row, Col, Radio } from 'antd';\r\nimport { Container, Typography } from '@material-ui/core';\r\nimport data from '../data/cj';\r\n\r\nexport default function Index() {\r\n    const [lorem, setLorem] = useState([]);\r\n    const [qtd, setQtd] = useState('');\r\n    const [type, setType] = useState('');\r\n\r\n    function handleGenerate() {\r\n        let loremArray = [];\r\n        let qtdParagraphs;\r\n\r\n        if (type === 'phrases') {\r\n            qtdParagraphs = 1;\r\n        }\r\n        else {\r\n            qtdParagraphs = qtd;\r\n        }\r\n\r\n        for (let i = 0; i < qtdParagraphs; i++) {\r\n            let loremP = [];\r\n            let qtdPhrases = type === 'phrases' ? qtd : Math.floor(Math.random() * (30 - 5)) + 5;\r\n\r\n            for (let j = 0; j < qtdPhrases; j++) {\r\n                let random = data[Math.floor(Math.random() * data.length)];\r\n                loremP = [...loremP, random];\r\n            }\r\n\r\n            const joined = loremP.join(' ');\r\n\r\n            loremArray = [...loremArray, joined];\r\n        }\r\n\r\n        setLorem(loremArray);\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Typography variant=\"h4\" style={{ marginBottom: 15 }}>CJ-Ipsum</Typography>\r\n            <Typography variant=\"h5\" style={{ marginBottom: 15 }}>Quantidade?</Typography>\r\n            <Row>\r\n                <Col span={4}>\r\n                    <Radio.Group onChange={e => setType(e.target.value)} value={type}>\r\n                        <Radio\r\n                            style={{\r\n                                display: 'block',\r\n                                height: '30px',\r\n                                lineHeight: '30px',\r\n                            }}\r\n                            value={'phrases'}>\r\n                            <span>Frases</span>\r\n                        </Radio>\r\n                        <Radio\r\n                            style={{\r\n                                display: 'block',\r\n                                height: '30px',\r\n                                lineHeight: '30px',\r\n                            }}\r\n                            value={'paragraphs'}>\r\n                            <span>Par√°grafos</span>\r\n                        </Radio>\r\n                    </Radio.Group>\r\n\r\n                </Col>\r\n                <Col span={6}>\r\n\r\n                    <Input maxLength=\"3\" onChange={e => setQtd(e.target.value)} />\r\n                </Col>\r\n                <Col span={6}>\r\n                    <Button onClick={() => handleGenerate()}>Gerar</Button>\r\n                </Col>\r\n            </Row>\r\n            {lorem.map((paragraph, index) => (\r\n                <Typography\r\n                    key={index.toString()}\r\n                    variant=\"body1\"\r\n                    style={{ marginTop: 50, color: '#000', fontSize: 22, textAlign: 'justify' }}>\r\n                    {paragraph}\r\n                </Typography>\r\n            ))}\r\n\r\n        </Container>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport Index from './pages/Index';\r\n\r\nexport default function routes() {\r\n    return (\r\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n            <Switch>\r\n                <Route exact path=\"/\" component={Index} />\r\n            </Switch>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","import React from 'react';\nimport './App.css';\nimport Routes from './routes';\n\nexport default function App() {\n  return (\n    <Routes />\n  );\n}\n"],"sourceRoot":""}